<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SWRLSwirl.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SWRLSwirl</TokenIdentifier>
			<Abstract type="html">The Swirl class is the main entry point into the Swirl proximity sdk for delivery of proximity and content
events to your app.  You use a singleton instance of this class to start: and stop proximity detection and delivery of proximity
events.  It supports a multi-delegate interface so you can add one or many delegate objects to recieve callbacks from any of the
protocols broadcast to the mult-delegate bus.</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
            
			
			<NodeRef refid="9"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/setStatus:</TokenIdentifier>
			<Abstract type="html">system status</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) SWRLStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/status</TokenIdentifier>
			<Abstract type="html">system status</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) SWRLStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SWRLSwirl/status</TokenIdentifier>
			<Abstract type="html">system status</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) SWRLStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/setVersion:</TokenIdentifier>
			<Abstract type="html">version</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *version</Declaration>
			
			
			<Anchor>//api/name/version</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/version</TokenIdentifier>
			<Abstract type="html">version</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *version</Declaration>
			
			
			<Anchor>//api/name/version</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SWRLSwirl/version</TokenIdentifier>
			<Abstract type="html">version</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *version</Declaration>
			
			
			<Anchor>//api/name/version</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/setError:</TokenIdentifier>
			<Abstract type="html">last error reported</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSError *error</Declaration>
			
			
			<Anchor>//api/name/error</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/error</TokenIdentifier>
			<Abstract type="html">last error reported</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSError *error</Declaration>
			
			
			<Anchor>//api/name/error</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SWRLSwirl/error</TokenIdentifier>
			<Abstract type="html">last error reported</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSError *error</Declaration>
			
			
			<Anchor>//api/name/error</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/setUserKey:</TokenIdentifier>
			<Abstract type="html">uuid generated for this instance</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *userKey</Declaration>
			
			
			<Anchor>//api/name/userKey</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/userKey</TokenIdentifier>
			<Abstract type="html">uuid generated for this instance</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *userKey</Declaration>
			
			
			<Anchor>//api/name/userKey</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SWRLSwirl/userKey</TokenIdentifier>
			<Abstract type="html">uuid generated for this instance</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *userKey</Declaration>
			
			
			<Anchor>//api/name/userKey</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/setUserInfo:</TokenIdentifier>
			<Abstract type="html">property-values passed to server</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSDictionary *userInfo</Declaration>
			
			
			<Anchor>//api/name/userInfo</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/userInfo</TokenIdentifier>
			<Abstract type="html">property-values passed to server</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSDictionary *userInfo</Declaration>
			
			
			<Anchor>//api/name/userInfo</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SWRLSwirl/userInfo</TokenIdentifier>
			<Abstract type="html">property-values passed to server</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSDictionary *userInfo</Declaration>
			
			
			<Anchor>//api/name/userInfo</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/setLocation:</TokenIdentifier>
			<Abstract type="html">geo-location</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) CLLocation *location</Declaration>
			
			
			<Anchor>//api/name/location</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/location</TokenIdentifier>
			<Abstract type="html">geo-location</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) CLLocation *location</Declaration>
			
			
			<Anchor>//api/name/location</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SWRLSwirl/location</TokenIdentifier>
			<Abstract type="html">geo-location</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) CLLocation *location</Declaration>
			
			
			<Anchor>//api/name/location</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/addDelegate:</TokenIdentifier>
			<Abstract type="html">Add a delegate to the internal delegate bus</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>- (void)addDelegate:(id)delegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>delegate</Name>
					<Abstract type="html">the object to receive delegate callbacks</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addDelegate:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/start:</TokenIdentifier>
			<Abstract type="html">Starts the sdk and all loaded managers</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>- (void)start:(nullable NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">all of the startup options (see x)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/start:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/stop</TokenIdentifier>
			<Abstract type="html">Stops the sdk</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>- (void)stop</Declaration>
			
			
			<Anchor>//api/name/stop</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/reset</TokenIdentifier>
			<Abstract type="html">Removes all locally stored data and state.  If the sdk is currently running, it will call stop first.
After calling this function, the sdk will be in a stopped state.</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>- (void)reset</Declaration>
			
			
			<Anchor>//api/name/reset</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/logEvent:data:</TokenIdentifier>
			<Abstract type="html">Log event to the log stream.</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>- (void)logEvent:(NSString *)event data:(NSString *)data</Declaration>
			<Parameters>
				<Parameter>
					<Name>event</Name>
					<Abstract type="html">The event name (see the list of known events)</Abstract>
				</Parameter><Parameter>
					<Name>data</Name>
					<Abstract type="html">The data for event (see the list of events)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/logEvent:data:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLSwirl/postObject:</TokenIdentifier>
			<Abstract type="html">Post an object to the internal message bus</Abstract>
			<DeclaredIn>SWRLSwirl.h</DeclaredIn>
			
			<Declaration>- (void)postObject:(id)object</Declaration>
			<Parameters>
				<Parameter>
					<Name>object</Name>
					<Abstract type="html">the object to post</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/postObject:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
        
        
	</File>
</Tokens>