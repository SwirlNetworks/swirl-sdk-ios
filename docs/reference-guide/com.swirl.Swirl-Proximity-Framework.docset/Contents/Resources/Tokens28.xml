<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/SWRLContentManagerDelegate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/SWRLContentManagerDelegate</TokenIdentifier>
			<Abstract type="html">The SWRLContentManagerDelegate protocol defines the methods used to receive beacon update from the SWRLContentManager.
Upon receiving a content event, you can use the result to update your user interface or perform other actions.
The methods of your delegate object are called from the thread associated with the dispatch queue that you used
when you added the delegate. See addDelegate:queue: addDelegate:queue:)</Abstract>
			<DeclaredIn>SWRLContentManager.h</DeclaredIn>
            
			
			<NodeRef refid="28"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SWRLContentManagerDelegate/contentManager:didRequestContentForVisit:</TokenIdentifier>
			<Abstract type="html">Tells the delegate that a content request was made in response to a visit event.</Abstract>
			<DeclaredIn>SWRLContentManager.h</DeclaredIn>
			
			<Declaration>- (void)contentManager:(SWRLContentManager *)manager didRequestContentForVisit:(SWRLVisit *)visit</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The SWRLContentManager reporting the event</Abstract>
				</Parameter><Parameter>
					<Name>visit</Name>
					<Abstract type="html">The visit object that triggered the content request.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/contentManager:didRequestContentForVisit:</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SWRLContentManagerDelegate/contentManager:didReceiveContentURL:fromNotification:</TokenIdentifier>
			<Abstract type="html">Tells the delegate that content of type URL has been received.</Abstract>
			<DeclaredIn>SWRLContentManager.h</DeclaredIn>
			
			<Declaration>- (void)contentManager:(SWRLContentManager *)manager didReceiveContentURL:(SWRLContent *)content fromNotification:(BOOL)fromNotification</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The SWRLContentManager reporting the event</Abstract>
				</Parameter><Parameter>
					<Name>content</Name>
					<Abstract type="html">The content object that was received.</Abstract>
				</Parameter><Parameter>
					<Name>fromNotification</Name>
					<Abstract type="html">The content was received from a notification event (open)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/contentManager:didReceiveContentURL:fromNotification:</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SWRLContentManagerDelegate/contentManager:didReceiveContentSwirl:fromNotification:</TokenIdentifier>
			<Abstract type="html">Tells the delegate that content of type Swirl has been received.</Abstract>
			<DeclaredIn>SWRLContentManager.h</DeclaredIn>
			
			<Declaration>- (void)contentManager:(SWRLContentManager *)manager didReceiveContentSwirl:(SWRLContent *)content fromNotification:(BOOL)fromNotification</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The SWRLContentManager reporting the event</Abstract>
				</Parameter><Parameter>
					<Name>content</Name>
					<Abstract type="html">The content object that was received.</Abstract>
				</Parameter><Parameter>
					<Name>fromNotification</Name>
					<Abstract type="html">The content was received from a notification event (open)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/contentManager:didReceiveContentSwirl:fromNotification:</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SWRLContentManagerDelegate/contentManager:didReceiveContentCustom:fromNotification:</TokenIdentifier>
			<Abstract type="html">Tells the delegate that content of type Custom has been received.</Abstract>
			<DeclaredIn>SWRLContentManager.h</DeclaredIn>
			
			<Declaration>- (void)contentManager:(SWRLContentManager *)manager didReceiveContentCustom:(SWRLContent *)content fromNotification:(BOOL)fromNotification</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The SWRLContentManager reporting the event</Abstract>
				</Parameter><Parameter>
					<Name>content</Name>
					<Abstract type="html">The content object that was received.</Abstract>
				</Parameter><Parameter>
					<Name>fromNotification</Name>
					<Abstract type="html">The content was received from a notification event (open)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/contentManager:didReceiveContentCustom:fromNotification:</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SWRLContentManagerDelegate/contentManager:didShowContentViewController:</TokenIdentifier>
			<Abstract type="html">Tells the delegate that the content view controller has been shown</Abstract>
			<DeclaredIn>SWRLContentManager.h</DeclaredIn>
			
			<Declaration>- (void)contentManager:(SWRLContentManager *)manager didShowContentViewController:(SWRLContentViewController *)controller</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The SWRLContentManager reporting the event</Abstract>
				</Parameter><Parameter>
					<Name>controller</Name>
					<Abstract type="html">The SWRLContentViewController</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/contentManager:didShowContentViewController:</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SWRLContentManagerDelegate/contentManager:didDismissContentViewController:</TokenIdentifier>
			<Abstract type="html">Tells the delegate that the content view controller has been closed.</Abstract>
			<DeclaredIn>SWRLContentManager.h</DeclaredIn>
			
			<Declaration>- (void)contentManager:(SWRLContentManager *)manager didDismissContentViewController:(SWRLContentViewController *)controller</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The SWRLContentManager reporting the event</Abstract>
				</Parameter><Parameter>
					<Name>controller</Name>
					<Abstract type="html">The SWRLContentViewController</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/contentManager:didDismissContentViewController:</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
        
        
	</File>
</Tokens>