<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SWRLBeacon.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SWRLBeacon</TokenIdentifier>
			<Abstract type="html">A SWRLBeacon object defines a type of SWRLSignal that is based on the deviceâ€™s proximity to a Bluetooth beacon, as opposed
to a geographic location or wifi network. A beacon aggregates a set of SWRLBeaconAdvertisements from a specific
beacon device and matches that device with logical location, placement, and custom attributes specified through the platform.
When the beacon device comes in range, the SWRLBeaconManager will change the state of the beacon and will generate
appropriate events through its delegate interface SWRLBeaconManagerDelegate.</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
            
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/setState:</TokenIdentifier>
			<Abstract type="html">Current state of the beacon (uknown, outside, inside).  See SWRLBeaconState.</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) SWRLBeaconState state</Declaration>
			
			
			<Anchor>//api/name/state</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/state</TokenIdentifier>
			<Abstract type="html">Current state of the beacon (uknown, outside, inside).  See SWRLBeaconState.</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) SWRLBeaconState state</Declaration>
			
			
			<Anchor>//api/name/state</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SWRLBeacon/state</TokenIdentifier>
			<Abstract type="html">Current state of the beacon (uknown, outside, inside).  See SWRLBeaconState.</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) SWRLBeaconState state</Declaration>
			
			
			<Anchor>//api/name/state</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/setRssi:</TokenIdentifier>
			<Abstract type="html">Current average rssi</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) int rssi</Declaration>
			
			
			<Anchor>//api/name/rssi</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/rssi</TokenIdentifier>
			<Abstract type="html">Current average rssi</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) int rssi</Declaration>
			
			
			<Anchor>//api/name/rssi</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SWRLBeacon/rssi</TokenIdentifier>
			<Abstract type="html">Current average rssi</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) int rssi</Declaration>
			
			
			<Anchor>//api/name/rssi</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/isOverlapping</TokenIdentifier>
			<Abstract type="html">Is the Placement associated with this beacon set to allow overlapping beacons.</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>- (BOOL)isOverlapping</Declaration>
			
			
			<Anchor>//api/name/isOverlapping</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/isEntered</TokenIdentifier>
			<Abstract type="html">Is the mobile device currently within the beacon range</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>- (BOOL)isEntered</Declaration>
			
			
			<Anchor>//api/name/isEntered</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/extraInfo</TokenIdentifier>
			<Abstract type="html">Retrieve any additional non-identifier related data associated with the beacon advertisements.  In the case of
Eddystone beacons, this would include TLM data base-64 encoded.</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>- (NSString *)extraInfo</Declaration>
			
			
			<Anchor>//api/name/extraInfo</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/manufacturer</TokenIdentifier>
			<Abstract type="html">Retrieve the manufacturer of the beacon device.</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>- (NSString *)manufacturer</Declaration>
			
			
			<Anchor>//api/name/manufacturer</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/model</TokenIdentifier>
			<Abstract type="html">Retreive the model of the beacon device</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>- (NSString *)model</Declaration>
			
			
			<Anchor>//api/name/model</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/serial</TokenIdentifier>
			<Abstract type="html">Retreive the serial number of the beacon device as recorded in the platform.</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>- (NSString *)serial</Declaration>
			
			
			<Anchor>//api/name/serial</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/protocol</TokenIdentifier>
			<Abstract type="html">Retreive the protocol of the underlying advertisements</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>- (int)protocol</Declaration>
			
			
			<Anchor>//api/name/protocol</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/protocolDescription</TokenIdentifier>
			<Abstract type="html">Retreive the protocol description of the underlying advertisements</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>- (NSString *)protocolDescription</Declaration>
			
			
			<Anchor>//api/name/protocolDescription</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/address</TokenIdentifier>
			<Abstract type="html">Retreive the address of the beacon device</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>- (NSString *)address</Declaration>
			
			
			<Anchor>//api/name/address</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/isConnectable</TokenIdentifier>
			<Abstract type="html">Is the beacon in a connectable state</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>- (BOOL)isConnectable</Declaration>
			
			
			<Anchor>//api/name/isConnectable</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/peripheral</TokenIdentifier>
			<Abstract type="html">Retreive the peripheral of the beacon if possible.</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>- (SWRLPeripheral *)peripheral</Declaration>
			
			
			<Anchor>//api/name/peripheral</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/partner</TokenIdentifier>
			<Abstract type="html">Retreive the partner information for this beacon</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>- (SWRLObject *)partner</Declaration>
			
			
			<Anchor>//api/name/partner</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/setRssiParameters:</TokenIdentifier>
			<Abstract type="html">Customize RSSI smoothing parameters
optsampleage - seconds to average over
maxsampleage - max seconds to average over if not min samples
min_samples    - min samples required</Abstract>
			<DeclaredIn>SWRLBeacon.h</DeclaredIn>
			
			<Declaration>- (void)setRssiParameters:(NSDictionary *)params</Declaration>
			<Parameters>
				<Parameter>
					<Name>params</Name>
					<Abstract type="html">Smoothing parameters</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setRssiParameters:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/type</TokenIdentifier>
			<Abstract type="html">Type of signal.</Abstract>
			<DeclaredIn>SWRLBeacon.m</DeclaredIn>
			
			<Declaration>- (SWRLSignalType)type</Declaration>
			
			
			<Anchor>//api/name/type</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/lastDetected</TokenIdentifier>
			<Abstract type="html">Timestamp of last detection of this signal.</Abstract>
			<DeclaredIn>SWRLBeacon.m</DeclaredIn>
			
			<Declaration>- (NSTimeInterval)lastDetected</Declaration>
			
			
			<Anchor>//api/name/lastDetected</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/name</TokenIdentifier>
			<Abstract type="html">A human readable name if available.</Abstract>
			<DeclaredIn>SWRLBeacon.m</DeclaredIn>
			
			<Declaration>- (NSString *)name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWRLBeacon/range</TokenIdentifier>
			<Abstract type="html">This is the approximate range to the beacon.  This is a rough approximation.</Abstract>
			<DeclaredIn>SWRLBeacon.m</DeclaredIn>
			
			<Declaration>- (double)range</Declaration>
			
			
			<Anchor>//api/name/range</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
        
        
	</File>
</Tokens>